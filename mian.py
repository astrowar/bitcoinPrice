import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

btc = [778, 774, 776, 781, 788, 788, 789, 793, 824, 860, 901, 891, 886, 897, 930, 967, 963, 952, 959, 997, 1015, 1023,
       1126, 994, 883, 896, 908, 894, 906, 785, 803, 826, 817, 822, 830, 903, 874, 895, 893, 920, 918, 922, 890, 893,
       915, 919, 920, 915, 921, 964, 979, 1007, 1013, 1030, 1014, 1024, 1050, 1052, 976, 999, 1008, 1000, 999, 1011,
       1012, 1035, 1055, 1056, 1052, 1084, 1123, 1123, 1172, 1174, 1150, 1175, 1190, 1187, 1222, 1259, 1285, 1267, 1270,
       1275, 1238, 1157, 1192, 1098, 1179, 1227, 1239, 1245, 1257, 1180, 1091, 952, 1029, 1049, 1118, 1028, 1038, 941,
       959, 956, 1037, 1046, 1040, 1037, 1079, 1086, 1099, 1141, 1141, 1133, 1196, 1190, 1181, 1208, 1207, 1226, 1218,
       1180, 1185, 1184, 1186, 1205, 1216, 1217, 1241, 1258, 1261, 1257, 1262, 1279, 1309, 1345, 1331, 1334, 1353, 1417,
       1452, 1507, 1508, 1533, 1560, 1535, 1640, 1721, 1762, 1820, 1720, 1771, 1776, 1723, 1739, 1807, 1899, 1961, 2052,
       2046, 2090, 2287, 2379, 2387, 2211, 2014, 2192, 2275, 2239, 2285, 2399, 2446, 2525, 2516, 2698, 2883, 2664, 2792,
       2827, 2845, 2961, 2657, 2748, 2447, 2442, 2464, 2665, 2507, 2617, 2754, 2671, 2727, 2710, 2589, 2512, 2436, 2517,
       2585, 2544, 2477, 2434, 2501, 2561, 2599, 2619, 2609, 2491, 2562, 2536, 2366, 2369, 2385, 2354, 2190, 2058, 1931,
       2176, 2320, 2264, 2898, 2682, 2807, 2725, 2751, 2560, 2495, 2647, 2781, 2722, 2745, 2866, 2710, 2693, 2794, 2873,
       3218, 3252, 3407, 3457, 3357, 3424, 3632, 3852, 4125, 4282, 4217, 4360, 4328, 4130, 4222, 4157, 4043, 4082, 4174,
       4340, 4363, 4360, 4354, 4391, 4607, 4594, 4748, 4911, 4580, 4648, 4344, 4488, 4641, 4654, 4310, 4375, 4329, 4248,
       4219, 3961, 3319, 3774, 3763, 3746, 4093, 3943, 3977, 3658, 3637, 3776, 3703, 3942, 3910, 4202, 4201, 4193, 4335,
       4360, 4386, 4293, 4225, 4338, 4345, 4376, 4602, 4777, 4782, 4819, 5325, 5563, 5739, 5647, 5711, 5603, 5546, 5727,
       5979, 6020, 5983, 5876, 5505, 5669, 5893, 5772, 5776, 6155, 6105, 6388, 6665, 7068, 7197, 7437, 7377, 6989, 7092,
       7415, 7158, 6719, 6362, 5716, 6550, 6635, 7301, 7815, 7786, 7817, 8007, 8255, 8059, 8268, 8148, 8250, 8707, 9284,
       9718, 9952, 9879, 10147, 10883, 11071, 11332, 11584, 11878, 13540, 16501, 16007, 15142, 14869, 16762]


def func(x, a, b ,c ,z , z2 , p , tc ,w  ):
    if (tc <  0): return 0.0
    #return a + b * pow(( 370+tc-x),z) + c * pow(( 370+tc-x),z) * np.cos( np.log((370 + tc-x)) + p  )
    return a + b * pow((370 + tc - x), z) + c * pow(( 370+tc-x),z2) * np.cos( 17.0* w * np.log((370 + tc-x)) + p  )


xdata = np.array(list(range(0,len(btc))))
ydata = np.log(np.array(btc))
print( np.array([xdata,ydata]) )

popt, pcov = curve_fit(func, xdata, ydata  )

print(popt)
plt.plot(xdata,  np.exp(ydata), 'b-', label='data')

plt.plot(xdata,   np.exp(func(xdata, *popt)), 'r-', label='fit')

plt.show()
